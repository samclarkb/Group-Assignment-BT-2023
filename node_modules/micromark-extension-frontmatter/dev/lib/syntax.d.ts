/**
 * Add support for parsing frontmatter in markdown.
 *
 * Function that can be called to get a syntax extension for micromark (passed
 * in `extensions`).
 *
 * Supports YAML by default.
 * Can be configured to support TOML and more.
 *
 * @param {Options} [options='yaml']
 *   Configuration (optional).
 * @returns {Extension}
 *   Syntax extension for micromark (passed in `extensions`).
 */
export function frontmatter(
  options?: import('../matters.js').Options | undefined
): Extension
export type Extension = import('micromark-util-types').Extension
export type ConstructRecord = import('micromark-util-types').ConstructRecord
export type Construct = import('micromark-util-types').Construct
export type Tokenizer = import('micromark-util-types').Tokenizer
export type TokenizeContext = import('micromark-util-types').TokenizeContext
export type State = import('micromark-util-types').State
export type Options = import('../matters.js').Options
export type Matter = import('../matters.js').Matter
export type Info = import('../matters.js').Info
